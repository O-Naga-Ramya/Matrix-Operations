//Hermitian(transpose conjugate) of given matrix
#include <stdio.h>
#include <complex.h>

int main() {
	printf("Hermitian of a matrix\n");
    int real[10][10],img[10][10];
    int k,l,i,j;
    double complex z1[10][10];
    double complex z1con[10][10];
    printf ("enter no of rows");
    scanf("%d", &i);
    printf ("enter no of columns");
    scanf("%d", &j);
    for (k=1;k<=i;k++)
        {for(l=1;l<=j;l++)
            {printf ("enter the element real part in %d%dplace",k,l);
            scanf("%d", &real[k][l]);
            printf ("enter the element img part in %d%dplace",k,l);
            scanf("%d", &img[k][l]);
            }
        }
        printf("\n");
	for (k=1;k<=i;k++)
        {for(l=1;l<=j;l++){
     		z1[k][l] = real[k][l] + img[k][l] * I;
    		printf("%.2f + %.2fi\t", creal(z1[k][l]), cimag(z1[k][l]));
    		z1con[k][l]= conj(z1[k][l]);
			}
            printf("\n");
        	}
			printf("\n");
	printf("conjugate of given matrix");
	printf("\n");
	for(k=1;k<=i;k++)
        {for(l=1;l<=j;l++)
        	{printf("%.2f + %.2fi\t", creal(z1con[k][l]), cimag(z1con[k][l]));}
        	printf("\n");
        	}
	        printf("\n");
	printf("hermitian of given matrix");
	printf("\n");
	for(k=1;k<=j;k++)
        {for(l=1;l<=i;l++)
        	{printf("%.2f + %.2fi\t", creal(z1con[l][k]), cimag(z1con[l][k]));}
        	printf("\n");
        	}
    return 0;
}
